"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

import os
import environ

env = environ.Env(
     DEBUG=(bool, False)
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'qwerty'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = 'DEBUG'

ALLOWED_HOSTS = False

MEDIA_URL = '/media/'
MEDIA_ROOT = str(BASE_DIR.joinpath('media'))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    # Django-filters
    'django_filters',
    # DRF
    'rest_framework',
    'rest_framework.authtoken',  # приложения для генерации токена авторизации на стороне сервера
    'drf_yasg',  # UI документация к API (аналог swagger)
    "corsheaders",  # CORS заголовок, чтоб принимать запросы
    # All-auth
    'allauth',  # Подключаем пакет all-auth
    'allauth.account',  # Подключаем пакет all-auth
    'allauth.socialaccount',  # Подключаем пакет all-auth
    'dj_rest_auth',  # Для реализации авторизации пользователей через API используем стороний пакет - dj_rest_auth
    'dj_rest_auth.registration',  # Подключаем пакет all-auth
    # Channels
    'channels',
    # Web-Push
    'webpush',

    # My apps
    'accounts',
    'media_storage',
    'comments_and_chats',
]

SITE_ID = 1

EMAIL_HOST = 'EMAIL_HOST'  # адрес сервера Яндекс-почты для всех один и тот же
EMAIL_PORT = 'EMAIL_PORT'  # порт smtp сервера тоже одинаковый
EMAIL_HOST_USER = 'EMAIL_HOST_USER'  # ваше имя пользователя, например, если ваша почта user@yandex.ru, то сюда
# надо писать user, иными словами, это всё то что идёт до собаки
EMAIL_HOST_PASSWORD = 'EMAIL_HOST_PASSWORD'  # пароль от почты
EMAIL_USE_SSL = 'EMAIL_USE_SSL'  # Яндекс использует ssl, подробнее о том, что это, почитайте в дополнительных источниках, но включать его

SERVER_EMAIL = 'SERVER_EMAIL'
DEFAULT_FROM_EMAIL = 'DEFAULT_FROM_EMAIL'

ADMINS = 'ADMINS'
SERVER_EMAIL = 'SERVER_EMAIL'  # это будет у нас вместо аргумента FROM в массовой рассылке

# Celery settings
CELERY_BROKER_URL = 'CELERY_BROKER_URL'
CELERY_RESULT_BACKEND = 'CELERY_RESULT_BACKEND'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend'
    ]
}

CORS_ORIGIN_WHITELIST = (
    'http://localhost:3000',
    'http://localhost:8000',
)

WEBPUSH_SETTINGS = {
    "VAPID_PUBLIC_KEY": 'VAPID_PUBLIC_KEY',
    "VAPID_PRIVATE_KEY": 'VAPID_PRIVATE_KEY',
    "VAPID_ADMIN_EMAIL": 'EMAIL_ADMIN',
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Channels
ASGI_APPLICATION = 'config.asgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'DB_NAME',
        'USER': 'DB_USER',
        'PASSWORD': 'DB_PASSWORD',
        'HOST': 'DB_HOST',
        'PORT': 'DB_PORT',
    },
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# DRF доступ и аторизация
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [  # аунтификация через сессию и токен
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication'
    ],
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
